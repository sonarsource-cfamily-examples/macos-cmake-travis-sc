language: cpp
os: osx

sudo: false

addons:
  sonarcloud:
    organization: "sonarsource-cfamily-examples"
    token:
      secure: "wgZne1IJMucV8l4NoECnpMdo/65u/iwN27wSnOS3XjRY/I8foPsC0TKI+SuSxY0Qzk1/A5mnf4CTMjbMabIFbZ1WwF80g6grBJ4ANYNfVbwt8x3bVIBgPVBleGD23S6hFu0KhGO01RQahJztyO57ApSYtOI3sEYUuyRTdcepZu7bXg2enzKg3zehM/N2kK5Em7w1G677CFXnX3gQPLZXk/BgT7DVrad9B25xe3b2EPKoXkG1Zp/9u38Cad28OhGY46ALqMDrwKwL3xGHxQTcPNF9J5G58FMGgvjU61IROVTMmLxAwsbDEvnLcy/uJTQj8lmuif3w70bzqwsUlmAoIV1xUaI0BfBg3cNQ7+cm8g3ZfEsLh6IGFODaPUqNAqeGXM9n0go48b4YdSz6o/gyRYHFNBaX2y7Urm7ifFadpCiiiEBfx0rUZEhbyUy2i5mJ4ZjRwHi7olzPjoAD9JjV5b4gLNzWIY0J4dHbOYA/GgmOwSg/QssjeNpf3AGsPMLcpxMU61U6Foek2dCrwWANS/0Yw26GGid7j3y3eF0D6cugsS6hNEBjgs0Gyo9taDdcb/dyPqRitTYnrBqSy6R6bxMN8mtHhtI/usyzfHR9qeU/PNttlS2Vj2j0+OC6qm/5ZY8HhoeNWV071+wmIcpPEJhYrl+j7fhvK6cZ4GiFPJ0="

env:
  - BUILD_WRAPPER_OUT_DIR=build_wrapper_output_folder

script:
  # Prepare the build system
  - NUMBER_OF_PROCESSORS=$(nproc --all)
  - mkdir build
  - cmake -S . -B build
  # Wraps the compilation with the Build Wrapper to generate configuration (used
  # later by the SonarQube Scanner) into the "build_wrapper_output_folder" folder
  - build-wrapper-macosx-x86 --out-dir "$BUILD_WRAPPER_OUT_DIR" cmake --build build/ --config Release
  # And finally run the SonarQube analysis - read the "sonar-project.properties"
  # file to see the specific configuration
  - sonar-scanner -X --define sonar.cfamily.cache.enabled=true --define sonar.cfamily.cache.path=${TRAVIS_HOME}/.cfamily --define sonar.cfamily.threads=${NUMBER_OF_PROCESSORS} --define sonar.cfamily.build-wrapper-output="$BUILD_WRAPPER_OUT_DIR"

cache:
  directories:
    - $HOME/.sonar/cache
    # This contains the CFamily cache. According to https://docs.travis-ci.com/user/caching/#pull-request-builds-and-caches,
    # for a PR, it will use the cache of the target branch if the branch of the PR does not already have its cache.
    - $HOME/.cfamily
