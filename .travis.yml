language: cpp
os: osx

sudo: false

addons:
  sonarcloud:
    organization: "sonarsource-cfamily-examples"
    token:
      secure: "o2yOfW24fQCuogW73qzeCkMuTFFomTvvZtTLAGv3iRy76jT3NBJH5amMd3+YJpupvauke2cqi4kiW2tuEnf1mIztQVxhKBH79uOve/g49Brd28V9afZMy0d6slFnCDmGhAJ1mRQEPex3vrc4XUfcWVGsOPxhrZxcuNyGUQd3OR287M2WYZ29Z7q5UAQ1klmrytBrIxsP59rqGZQhQx3e6Ys2/y7o90cj1RcOybvlQHiCHiDQnR7CyOCULgkADcsBd0VKHNThwa3+WVviWaiXq2WQ8a1xVuHW3NM/xjdqf/VEoRcr5MrTpvxG3HppDU9r6tFI1K7I3lAbeHFrWfI6Zcmx8LWaeSZqmo1Hg8QeOhIaL/AEvEdehmUV/9JynOxiQyoZsBYfxEnzgcwWKoznokFhhAiuQB0RtthycEg2tp3ltAO4zH32wB5lid/pZqKGmHWcp6g1bhOlqx8ipJI7LQXzn6uyFAmPdNE7Vi8rn9yZy5IP1lWfeC2Hb2YLgE002YkE0WpGpMq4ao0ZavnDU6xKAnhyGighEV3d1i389ctHc+0AZBhPQIpVprfWmSqVIOICXAdzEEuOxDW3snc9SH+ghkFNmWw4jRVK1STISAHr6YA6R6jIKg2iTIohnU2StXjg5szRRvw6mTZ9ZPfoSdeYNCeAprYVWoGhEsDBNLI="

env:
  - BUILD_WRAPPER_OUT_DIR=build_wrapper_output_folder

script:
  # Prepare the build system
  - NUMBER_OF_PROCESSORS=$(nproc --all)
  - mkdir build
  - cmake -S . -B build
  # Wraps the compilation with the Build Wrapper to generate configuration (used
  # later by the SonarQube Scanner) into the "build_wrapper_output_folder" folder
  - build-wrapper-macosx-x86 --out-dir "$BUILD_WRAPPER_OUT_DIR" cmake --build build/ --config Release
  # And finally run the SonarQube analysis - read the "sonar-project.properties"
  # file to see the specific configuration
  - sonar-scanner -X --define sonar.cfamily.cache.enabled=true --define sonar.cfamily.cache.path=${TRAVIS_HOME}/.cfamily --define sonar.cfamily.threads=${NUMBER_OF_PROCESSORS} --define sonar.cfamily.build-wrapper-output="$BUILD_WRAPPER_OUT_DIR"

cache:
  directories:
    - $HOME/.sonar/cache
    # This contains the CFamily cache. According to https://docs.travis-ci.com/user/caching/#pull-request-builds-and-caches,
    # for a PR, it will use the cache of the target branch if the branch of the PR does not already have its cache.
    - $HOME/.cfamily
